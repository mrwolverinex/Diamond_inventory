@model DiamondInventory.Models.Worker

@{
    ViewBag.Title = "Index";
}

<h2>Add Worker </h2>
@using (Html.BeginForm("Create", "Worker", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="color: #337ab7;">
    @*<h4>Add_Worker </h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Workername, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Workername, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Workername, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.WorkType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.WorkType, new SelectList(ViewBag.Workers, "Text", "value"), new { @class = "form-control", @onchange = "GetWorkPrice()" })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.WorkPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            
            <input type="text" readonly="readonly" id="WorkPrice" name="WorkPrice" class="form-control" />
        </div>
    </div>

    @*<div class="form-group">
        <label class="control-label col-md-2">price</label>
        <div class="col-md-10">
            
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.City, new List<SelectListItem>()
         {
             new SelectListItem {Text="Ahemdabad"},
             new SelectListItem {Text="Amreli"},
             new SelectListItem {Text="Rajkot"},
         }, new
         {
             @class = "form-control"
         })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.State, new List<SelectListItem>()
        {
            new SelectListItem {Text="Gujarat"},
            new SelectListItem {Text="Maharastra"},
            new SelectListItem {Text="Rajasthan"},
        }, new
        {
            @class = "form-control"
        })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Country, new List<SelectListItem>()
                        {
                            new SelectListItem {Text="India"},
                            new SelectListItem {Text="America"},
                            new SelectListItem {Text="Mexico"},
                        }, new
                        {
                            @class = "form-control"
                        })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.BloodGroup, new List<SelectListItem>()
                       {
                           new SelectListItem {Text="A+"},
                           new SelectListItem {Text="B+"},
                            new SelectListItem {Text="O+"},
                           new SelectListItem {Text="A-"},
                           new SelectListItem {Text="B-"},
                            new SelectListItem {Text="O-"},
                            new SelectListItem {Text="AB+"},
                             new SelectListItem {Text="AB-"},


                       }, new
                       {
                           @class = "form-control"
                       })


            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           @* <input type="date" class="form-control" name="JoiningDate" id="JoiningDate" value="@Model.JoiningDate.ToString("yyyy-MM-dd")"/>*@
            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new {@type="Date", @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-info btn" />
        </div>
    </div>



    <script type="text/javascript">
        $(function () {
            $('#JoiningDate').datetimepicker();
            dateFormat: "mm-dd-yyyy"
        });
        function GetWorkPrice() {

            var Wo_Type = document.getElementById("WorkType").value;
            $.ajax({
                type: 'POST',
                url: '/Worker/GetPrice',
                data: "{Worktype:'" + Wo_Type + "'}",
                contentType: 'application/json',
                success: function (data) {
                    document.getElementById('WorkPrice').value = data;
                },
                error: function () {
                    alert("error");
                }
            });
        }
    </script>

</div>

    <div>
        @Html.ActionLink("Back To List", "Index", "Worker", null, new { @class = "btn btn-primary btn-sm" })
    </div>
}
@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
}



